
"use client";

import { AppShell } from '@/components/app-shell';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Loader2, RefreshCw, Newspaper, Microscope, Telescope, Brain } from 'lucide-react';
import { useState, useCallback, useEffect } from 'react';
import { useToast } from '@/hooks/use-toast';
import { generateScienceHighlight, type GenerateScienceHighlightOutput } from '@/ai/flows/generate-science-highlight-flow';
import { Skeleton } from '@/components/ui/skeleton';
import { Badge } from '@/components/ui/badge';

interface ScienceHighlightItem extends GenerateScienceHighlightOutput {}

export default function ScienceNewsPage() {
  const [highlight, setHighlight] = useState<ScienceHighlightItem | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const { toast } = useToast();

  const fetchScienceHighlight = useCallback(async () => {
    setIsLoading(true);
    setHighlight(null); 
    try {
      const highlightData = await generateScienceHighlight();
      setHighlight(highlightData);
    } catch (error) {
      console.error("Failed to generate science highlight:", error);
      toast({
        title: "Error Fetching Highlight!",
        description: "Could not load a science highlight from the AI. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  }, [toast]);

  useEffect(() => {
    fetchScienceHighlight();
  }, [fetchScienceHighlight]);

  const getIconForField = (field: string) => {
    const lowerField = field.toLowerCase();
    if (lowerField.includes("astro") || lowerField.includes("space") || lowerField.includes("cosmo")) return <Telescope className="h-5 w-5 mr-2 text-primary" />;
    if (lowerField.includes("bio") || lowerField.includes("medic") || lowerField.includes("health")) return <Microscope className="h-5 w-5 mr-2 text-primary" />;
    if (lowerField.includes("physic") || lowerField.includes("chem") || lowerField.includes("material")) return <Brain className="h-5 w-5 mr-2 text-primary" />; // General science for others
    return <Newspaper className="h-5 w-5 mr-2 text-primary" />;
  };

  return (
    <AppShell>
      <div className="container mx-auto py-8 space-y-8">
        <header className="text-center">
          <div className="inline-block bg-primary/10 p-4 rounded-full mb-4 shadow-md">
            <Newspaper className="h-12 w-12 text-primary" />
          </div>
          <h1 className="text-4xl font-extrabold tracking-tight text-primary mb-2">
            Science Highlights
          </h1>
          <p className="text-xl text-muted-foreground">
            Discover a recent significant development in the world of science, explained by AI.
          </p>
        </header>

        <div className="flex justify-center mb-6">
            <Button onClick={fetchScienceHighlight} disabled={isLoading} className="bg-primary hover:bg-primary/90">
              {isLoading ? <Loader2 className="mr-2 h-5 w-5 animate-spin" /> : <RefreshCw className="mr-2 h-5 w-5" />}
              {isLoading ? "Fetching Highlight..." : "Get New Science Highlight"}
            </Button>
        </div>

        {isLoading && (
          <Card className="shadow-xl max-w-2xl mx-auto">
            <CardHeader>
              <Skeleton className="h-8 w-3/4 mb-2" />
              <Skeleton className="h-4 w-1/4" />
            </CardHeader>
            <CardContent className="space-y-3">
              <Skeleton className="h-5 w-full" />
              <Skeleton className="h-5 w-5/6" />
              <Skeleton className="h-20 w-full mt-3" />
              <Skeleton className="h-4 w-1/3 mt-2" />
            </CardContent>
          </Card>
        )}

        {!isLoading && highlight && (
          <Card className="shadow-xl max-w-2xl mx-auto animate-in fade-in-50 duration-500">
            <CardHeader>
              <div className="flex justify-between items-start">
                <CardTitle className="text-2xl md:text-3xl text-primary">{highlight.title}</CardTitle>
                 <Badge variant="outline" className="ml-2 shrink-0 mt-1">
                    {getIconForField(highlight.field)}
                    {highlight.field}
                </Badge>
              </div>
              <CardDescription className="pt-2 text-md">
                {highlight.summary}
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="prose prose-sm sm:prose-base dark:prose-invert max-w-none whitespace-pre-line leading-relaxed">
                <p>{highlight.explanation}</p>
              </div>
            </CardContent>
             <CardFooter>
                <p className="text-xs text-muted-foreground">Science highlight generated by AI. Information may be subject to model knowledge cutoff.</p>
            </CardFooter>
          </Card>
        )}
        
        {!isLoading && !highlight && (
             <Card className="shadow-xl max-w-2xl mx-auto">
                <CardContent className="py-10">
                     <p className="text-muted-foreground text-center">
                        Could not fetch a science highlight. Please try the refresh button.
                    </p>
                </CardContent>
            </Card>
        )}

      </div>
    </AppShell>
  );
}
